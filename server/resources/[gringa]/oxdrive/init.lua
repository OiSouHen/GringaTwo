-----------------------------------------------------------------------------------------------------------------------------------------
-- VRP
-----------------------------------------------------------------------------------------------------------------------------------------
local Proxy = module("vrp","lib/Proxy")
local vRP = Proxy.getInterface("vRP")
-----------------------------------------------------------------------------------------------------------------------------------------
-- BLOB2STRING
-----------------------------------------------------------------------------------------------------------------------------------------
local function blob2string(blob)
	for k,v in pairs(blob) do
		blob[k] = string.char(v)
	end

	return table.concat(blob)
end
-----------------------------------------------------------------------------------------------------------------------------------------
-- QUERYS
-----------------------------------------------------------------------------------------------------------------------------------------
local querys = {}
-----------------------------------------------------------------------------------------------------------------------------------------
-- ON_INIT
-----------------------------------------------------------------------------------------------------------------------------------------
local function on_init(cfg)
	return exports["oxmysql"] ~= nil
end
-----------------------------------------------------------------------------------------------------------------------------------------
-- ON_PREPARE
-----------------------------------------------------------------------------------------------------------------------------------------
local function on_prepare(name,query)
	querys[name] = query
end
-----------------------------------------------------------------------------------------------------------------------------------------
-- ON_QUERY
-----------------------------------------------------------------------------------------------------------------------------------------
local function on_query(name,params,mode)
	local query = querys[name]
	local _params = { _ = true }
	for k,v in pairs(params) do
		_params[k] = v
	end

	local r = async()

	if mode == "execute" then
		exports["oxmysql"]:execute(query,_params,function(data)
			r(data["affectedRows"])
		end)
	elseif mode == "scalar" then
		exports["oxmysql"]:scalar(query,_params,function(scalar)
			r(scalar)
		end)
	else
		exports["oxmysql"]:execute(query,_params,function(rows)
			if query:find(";.-SELECT.+LAST_INSERT_ID%(%)") then
				rows = rows[#rows]
			end

			for _,row in pairs(rows) do
				for k,v in pairs(row) do
					if type(v) == "table" then
						row[k] = blob2string(v)
					end
				end
			end
			r(rows,#rows)
		end)
	end

	return r:wait()
end
-----------------------------------------------------------------------------------------------------------------------------------------
-- ASYNC
-----------------------------------------------------------------------------------------------------------------------------------------
CreateThread(function()
	vRP.registerDBDriver("oxmysql",on_init,on_prepare,on_query)
end)